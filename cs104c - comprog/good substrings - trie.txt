#include <bits/stdc++.h>
using namespace std;
 
#define vi vector<int>
#define pii pair<int, int>
#define vpii vector<pii>
#define fastio ios::sync_with_stdio(false);cin.tie(0); 
#define mp make_pair
 
ifstream fin("input.txt");
ofstream fout("output.txt");
const int MOD = 1e9 + 7;

//Rabin-Karp
const int N = 12e5 + 5;
int n, k, cnt, ans;
char c[27];
int a[27], pref[2000];
int nxt[N][26]; 
string s, t;
 
void add(int l, int r){
	int rt = 0;
	for(int i=l; i<=r; i++){
		int c = s[i] - 'a';
		if(!nxt[rt][c])nxt[rt][c] = ++cnt;
		rt = nxt[rt][c];
	}
}
 
int main(){
	cin >> s;
	for(int i=1; i<=26; i++){
		cin >> c[i];
		a[i] = (1 - (c[i] - '0'));
	}
	cin >> k;
	for(int i=0; i<s.size(); i++){
		pref[i] += pref[max(0, i-1)];
		if(a[s[i]-'a'+1])pref[i]++;
	}
	for(int i=0; i<s.size(); i++){
		int l = i, r = s.size()-1;
		int res = -1;
		while(l <= r){
			int mid = (l + r) / 2;
			int t = pref[max(0, i-1)];
			if(!i)t = 0;
			if(pref[mid] - t <= k){
				l = mid + 1;
				res = mid;
			} else r = mid - 1;
		}
		if(res!=-1)add(i, res);
	}
	cout << cnt;
}


/*
avoid endl unless absolutely necessary!
*/